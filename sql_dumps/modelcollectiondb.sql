-- MySQL Script generated by MySQL Workbench
-- 10/23/15 15:55:18
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema modelcollectiondb
-- -----------------------------------------------------
-- A database schema used by a model collection tracking application
CREATE SCHEMA IF NOT EXISTS `modelcollectiondb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `modelcollectiondb` ;

-- -----------------------------------------------------
-- Table `modelcollectiondb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`user` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_first` VARCHAR(45) NULL,
  `name_last` VARCHAR(45) NULL,
  `email` VARCHAR(255) NULL,
  `nickname` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `status` ENUM('activated','pending') NULL DEFAULT 'pending',
  `is_admin` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`model` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`model` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL COMMENT 'The official (cover name) of the model',
  `description` TEXT NULL,
  `manufacturer` VARCHAR(255) NULL,
  `scale` VARCHAR(10) NULL,
  `series` VARCHAR(255) NULL,
  `year_of_release` VARCHAR(4) NOT NULL,
  `cover_price` INT NULL COMMENT 'The original price of the model in yen (sometimes in the box)',
  `cover_price_currency` VARCHAR(255) NULL,
  `selling_price` INT NULL COMMENT 'The price of the model when it was bought. Can be 0 if was not purchased',
  `selling_price_currency` VARCHAR(255) NULL,
  `store` VARCHAR(255) NULL,
  `status` ENUM('boxed','unboxed','broken','scrap') NOT NULL COMMENT 'boxed - model is still factory sealed' /* comment truncated */ /*unboxed - model has been opened and is in good working condition
broken - model has some broken parts
scrap - model can no longer be assembled completely*/,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`project` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `status` ENUM('ongoing','pending','completed') NOT NULL DEFAULT 'pending',
  `date_started` DATE NULL,
  `last_updated` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`task`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`task` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `status` ENUM('pending','completed','ongoing') NULL DEFAULT 'pending',
  PRIMARY KEY (`id`, `project_id`),
  INDEX `fk_task_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_task_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `modelcollectiondb`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`supply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`supply` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`supply` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(255) NULL,
  `status` ENUM('pending','stocked','depleted') NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`gundam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`gundam` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`gundam` (
  `model_id` INT NOT NULL,
  `grade` VARCHAR(2) NULL,
  `gundam_series` VARCHAR(255) NULL COMMENT 'The gundam series where the model came from (e.g. Gundam 00, BB Senshi)',
  `gundam_series_number` INT NULL,
  `gundam_model_number` VARCHAR(255) NULL COMMENT 'Model number of the gundam (e.g. GAT-X105)',
  `subtitle` TEXT NULL,
  PRIMARY KEY (`model_id`),
  CONSTRAINT `fk_gundam_model`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`project_involves_model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`project_involves_model` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`project_involves_model` (
  `project_id` INT NOT NULL,
  `model_id` INT NOT NULL,
  PRIMARY KEY (`project_id`, `model_id`),
  INDEX `fk_project_has_model_model1_idx` (`model_id` ASC),
  INDEX `fk_project_has_model_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_project_has_model_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `modelcollectiondb`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_has_model_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`user_owns_model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`user_owns_model` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`user_owns_model` (
  `user_id` INT NOT NULL,
  `model_id` INT NOT NULL,
  `year_owned` YEAR NULL,
  PRIMARY KEY (`user_id`, `model_id`),
  INDEX `fk_user_has_model_model1_idx` (`model_id` ASC),
  INDEX `fk_user_has_model_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_model_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `modelcollectiondb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_model_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`task_has_supply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`task_has_supply` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`task_has_supply` (
  `task_id` INT NOT NULL,
  `task_project_id` INT NOT NULL,
  `supply_id` INT NOT NULL,
  PRIMARY KEY (`task_id`, `task_project_id`, `supply_id`),
  INDEX `fk_task_has_supply_supply1_idx` (`supply_id` ASC),
  INDEX `fk_task_has_supply_task1_idx` (`task_id` ASC, `task_project_id` ASC),
  CONSTRAINT `fk_task_has_supply_task1`
    FOREIGN KEY (`task_id` , `task_project_id`)
    REFERENCES `modelcollectiondb`.`task` (`id` , `project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_task_has_supply_supply1`
    FOREIGN KEY (`supply_id`)
    REFERENCES `modelcollectiondb`.`supply` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`user_works_on_project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`user_works_on_project` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`user_works_on_project` (
  `user_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `project_id`),
  INDEX `fk_user_has_project_project1_idx` (`project_id` ASC),
  INDEX `fk_user_has_project_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_project_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `modelcollectiondb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_project_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `modelcollectiondb`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`profile_picture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`profile_picture` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`profile_picture` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `selected` TINYINT(1) NULL DEFAULT 0,
  `filename` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_profile_picture_user1_idx` (`user_id` ASC),
  UNIQUE INDEX `filename_UNIQUE` (`filename` ASC),
  CONSTRAINT `fk_profile_picture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `modelcollectiondb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`category` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`custom_model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`custom_model` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`custom_model` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `type` ENUM('kitbash','combination') NOT NULL COMMENT 'kitbash - made from parts of scrap models' /* comment truncated */ /*combination - made by combining two or more built models*/,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`custom_model_composed_of_model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`custom_model_composed_of_model` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`custom_model_composed_of_model` (
  `custom_model_id` INT NOT NULL,
  `model_id` INT NOT NULL,
  PRIMARY KEY (`custom_model_id`, `model_id`),
  INDEX `fk_custom_model_has_model_model1_idx` (`model_id` ASC),
  INDEX `fk_custom_model_has_model_custom_model1_idx` (`custom_model_id` ASC),
  CONSTRAINT `fk_custom_model_has_model_custom_model1`
    FOREIGN KEY (`custom_model_id`)
    REFERENCES `modelcollectiondb`.`custom_model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_custom_model_has_model_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`nendoroid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`nendoroid` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`nendoroid` (
  `model_id` INT NOT NULL,
  `number` VARCHAR(5) NULL,
  PRIMARY KEY (`model_id`),
  CONSTRAINT `fk_nendoroid_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`zoid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`zoid` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`zoid` (
  `model_id` INT NOT NULL,
  `zoid_series` VARCHAR(255) NULL,
  `zoid_series_number` INT NULL,
  `zoid_model_number` VARCHAR(25) NULL,
  PRIMARY KEY (`model_id`),
  CONSTRAINT `fk_zoid_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `modelcollectiondb`.`model_has_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `modelcollectiondb`.`model_has_category` ;

CREATE TABLE IF NOT EXISTS `modelcollectiondb`.`model_has_category` (
  `model_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`model_id`, `category_id`),
  INDEX `fk_model_has_category_category1_idx` (`category_id` ASC),
  INDEX `fk_model_has_category_model1_idx` (`model_id` ASC),
  CONSTRAINT `fk_model_has_category_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `modelcollectiondb`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_has_category_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `modelcollectiondb`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
